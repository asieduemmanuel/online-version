@model online_version.Models.Delivering

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="panel panel-success">
            <div class="panel-heading">Create Delivries</div>
            <div class="panel-body">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="panel-body">
                    @Html.LabelFor(model => model.Comodity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="panel-body">
                        @Html.EditorFor(model => model.Comodity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comodity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="panel-body">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="panel-body">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="panel-body">
                    @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="panel-body">
                        @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="panel-body">
                    @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="panel-body">
                        @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="panel-body">
                    @Html.LabelFor(model => model.DeleveringBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="panel-body">
                        @Html.EditorFor(model => model.DeleveringBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeleveringBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="panel-body">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="panel-body">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="panel-body">
                    <div class="panel-body">
                        <input type="submit" value="Create" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>

    </div>

</body>
</html>
